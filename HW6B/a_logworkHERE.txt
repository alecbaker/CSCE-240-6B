JAMES THOMPSON:
NOVEMBER 28
  - Built contents of various functions within codelines.cc to
    be used in the back-end of the assembler.
DECEMBER 5
  - Worked with Alec to create and complete the 6B System Manual.
  - Spellchecked and formatted the 6B System Manual to improve
    simplicity and legibility.



ALEC BAKER:
NOVEMBER 28
  - Set up initial github repository
  - Created PassOne read to parse the source code input file
    into codeline attributes, create the codeline object, and store 
    the into codelines_ vector
DECEMBER 2
  - Added error checking for symbols when setting up symbol table 
    in pass one to handle the following errors: symbols are 1-3 chars,
    must start with an alphanumberic character, and must oly be
    alphanumberic.
  ** Below were with help of James and Ethan **
  - added error checking for invalid mnemoics, undefined symbols,
    DS and ORG outside of memory. now handles all xinsource files
    properly.
    

CHRISTOPHER WALLS:
  - With assistance from James and Chris, completed PassOne() and PassTwo()
    funtionality, to the extent they work on source codes that have no 
    errors within them.
  - wrote codeline.cc
  - made the template for system manual and user manual with Alec
  - wrote user manual errors with help of Ethan
  - added sourcecode and valid mneumonic formats
  - wrote an error checking guide to distinguish where and how we handle certain errors

JAMES COCHRAN:
NOVEMER 28 5pm - 11pm:
  - Completed symboltable_ map functionality. 
  - With assistance from Ethan and Chris, completed PassOne() and PassTwo()
    funtionality, to the extent they work on source codes that have no 
    errors within them.
NOVEMBER 29 12am - 1am 
  - Changed the way we initialized maps
  - added this files: a_logworkHERE.txt & a_whatNEXT.txt in 'HW6B' directory
    and added mycpplint to 'group8_hwprog6' directory 
  - Made our files only dump codeline and symboltable_ contents to log_stream
    and still dumps some to out_stream, but correct execution will show in 
    'zmylog.txt' assuming you have followed something along the lines of:
     make -f ../../makefile 
    ./Aprog ../../ytestban.txt zmyout zmylog.txt
    in the 'group8_hwprog6' directory.
DECEMBER 1 10am - 11am 
  - Added DS and ORG functionality, that needs to be tested more.
  - Code catches if a symbol has been multiply defined.
  - Added Buell's example source codes and respected logs in the HW6B directory.
DECEMBER 2 12pm-7pm
  - Helped Alec with his error checking 
  - Completed the multiply defined error working correctly 
DECEMBER 3 3pm - 
  - Me and Ethan made the code prettier.
DECEMBER 5 
  - Finalized and made sure the code worked in every case.
  - Made sure our code covered every error the assembler can run into. 
  - Worked on the User manual. 
ETHAN WEAVER:
November 29 10:30 - 12:15
  - Made it print the machine code to zmylog.txt
  - Corrected the handeling of END for pc_in_assembler_
  - Changed the handeling of the hex's machine_code
    - has it clear the current string of machine_code
    - converted the integer representation of the hex as a 16 bit binay string
    - set that to machine_code
  - cleanup up out_stream dumps
    - only thing going to out_stream now is the machine_code
  - changed the Modified By: 'placeholdername' to show Group 8
Dec 2:
  - fixed handeling of multiple error messages
  - wrote machine code to a .txt and a .bin file
  - read machine code from .bin file and dumped to log file
Dec 3:
  - Made code prettier with James C
  - fixed handeling of bit order when dumping into the binary file
  - fixed handeling of bit order when reading from the binary file

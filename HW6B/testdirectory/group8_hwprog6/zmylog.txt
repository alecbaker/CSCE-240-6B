Main: Beginning execution
Main: logfile 'zmylog.txt

Reading machine code

PASS ONE
    0                                           *23 567 9 123 56789 1
    1                                           *ll mmm a sss hhhhh * comment
    2    0  000000000000 xxxx xxxx xxxx xxxx        LD    IDX ..... * load ACC with value at IDX
    3    1  000000000001 xxxx xxxx xxxx xxxx        ADD   STO ..... * add loop value to initial address
    4    2  000000000010 xxxx xxxx xxxx xxxx        STC   STO ..... * store that address at STO
    5                                           *
    6    3  000000000011 xxxx xxxx xxxx xxxx TOP    LD    BB1 ..... * load ACC with value at BB1
    7    4  000000000100 xxxx xxxx xxxx xxxx        STC   TMP ..... * store that value at TMP
    8    5  000000000101 xxxx xxxx xxxx xxxx        LD    BB1 ..... * reload ACC with value at BB1
    9    6  000000000110 xxxx xxxx xxxx xxxx        ADD   AA1 ..... * add in value at AA1
   10    7  000000000111 xxxx xxxx xxxx xxxx        WRT       ..... * write the new Fib number
   11    8  000000001000 xxxx xxxx xxxx xxxx        STC * STO ..... * store ACC where STO is pointing to
   12    9  000000001001 xxxx xxxx xxxx xxxx        LD  * STO ..... * load ACC from where STO is pointing to
   13   10  000000001010 xxxx xxxx xxxx xxxx        STC   BB1 ..... * store ACC where STO is pointing to
   14   11  000000001011 xxxx xxxx xxxx xxxx        LD    TMP ..... * load the old BB1 from TMP
   15   12  000000001100 xxxx xxxx xxxx xxxx        STC   AA1 ..... * store ACC where STO is pointing to
   16                                           *
   17   13  000000001101 xxxx xxxx xxxx xxxx        LD    IDX ..... * reload ACC with the counter
   18   14  000000001110 xxxx xxxx xxxx xxxx        ADD   ONE ..... * increment counter
   19   15  000000001111 xxxx xxxx xxxx xxxx        STC   IDX ..... * store this new address at STO
   20   16  000000010000 xxxx xxxx xxxx xxxx        LD    STO ..... * load our pointer
   21   17  000000010001 xxxx xxxx xxxx xxxx        ADD   ONE ..... * increment by one
   22   18  000000010010 xxxx xxxx xxxx xxxx        STC   STO ..... * store it back
   23   19  000000010011 xxxx xxxx xxxx xxxx        LD    IDX ..... * reload ACC with the counter
   24   20  000000010100 xxxx xxxx xxxx xxxx        BAN   TOP ..... * loop until done
   25   21  000000010101 xxxx xxxx xxxx xxxx        STP   ...
   26                                           *
   27   22  000000010110 xxxx xxxx xxxx xxxx ONE    HEX       +0001 * we need a constant 1
   28   23  000000010111 xxxx xxxx xxxx xxxx IDX    HEX       -0005 * loop index
   29   24  000000011000 xxxx xxxx xxxx xxxx AA1    HEX       +0008 * smaller of two values to add 
   30   25  000000011001 xxxx xxxx xxxx xxxx BB1    HEX       +000D * larger of two values to add
   31   26  000000011010 xxxx xxxx xxxx xxxx TMP    DS        +0001 * temp storage
   32   27  000000011011 xxxx xxxx xxxx xxxx STO    HEX       +0028 * address in SSS at which to store
   33   28  000000011100 xxxx xxxx xxxx xxxx        ORG       +0028 * set PC location for SSS at +0020 
   34   40  000000101000 xxxx xxxx xxxx xxxx SSS    DS        +0010
   35   56  000000111000 xxxx xxxx xxxx xxxx        END   ...


SYMBOL TABLE
    SYM LOC FLAGS
SYM  AA1  24
SYM  BB1  25
SYM  IDX  23
SYM  ONE  22
SYM  SSS  40
SYM  STO  27
SYM  TMP  26
SYM  TOP   3

PASS TWO
    0                                           *23 567 9 123 56789 1
    1                                           *ll mmm a sss hhhhh * comment
    2    0  000000000000 1010 0000 0001 0111        LD    IDX ..... * load ACC with value at IDX
    3    1  000000000001 1000 0000 0001 1011        ADD   STO ..... * add loop value to initial address
    4    2  000000000010 0100 0000 0001 1011        STC   STO ..... * store that address at STO
    5                                           *
    6    3  000000000011 1010 0000 0001 1001 TOP    LD    BB1 ..... * load ACC with value at BB1
    7    4  000000000100 0100 0000 0001 1010        STC   TMP ..... * store that value at TMP
    8    5  000000000101 1010 0000 0001 1001        LD    BB1 ..... * reload ACC with value at BB1
    9    6  000000000110 1000 0000 0001 1000        ADD   AA1 ..... * add in value at AA1
   10    7  000000000111 1110 0000 0000 0011        WRT       ..... * write the new Fib number
   11    8  000000001000 0101 0000 0001 1011        STC * STO ..... * store ACC where STO is pointing to
   12    9  000000001001 1011 0000 0001 1011        LD  * STO ..... * load ACC from where STO is pointing to
   13   10  000000001010 0100 0000 0001 1001        STC   BB1 ..... * store ACC where STO is pointing to
   14   11  000000001011 1010 0000 0001 1010        LD    TMP ..... * load the old BB1 from TMP
   15   12  000000001100 0100 0000 0001 1000        STC   AA1 ..... * store ACC where STO is pointing to
   16                                           *
   17   13  000000001101 1010 0000 0001 0111        LD    IDX ..... * reload ACC with the counter
   18   14  000000001110 1000 0000 0001 0110        ADD   ONE ..... * increment counter
   19   15  000000001111 0100 0000 0001 0111        STC   IDX ..... * store this new address at STO
   20   16  000000010000 1010 0000 0001 1011        LD    STO ..... * load our pointer
   21   17  000000010001 1000 0000 0001 0110        ADD   ONE ..... * increment by one
   22   18  000000010010 0100 0000 0001 1011        STC   STO ..... * store it back
   23   19  000000010011 1010 0000 0001 0111        LD    IDX ..... * reload ACC with the counter
   24   20  000000010100 0000 0000 0000 0011        BAN   TOP ..... * loop until done
   25   21  000000010101 1110 0000 0000 0010        STP   ...
   26                                           *
   27   22  000000010110 0000 0000 0000 0001 ONE    HEX       +0001 * we need a constant 1
   28   23  000000010111 1111 1111 1111 1011 IDX    HEX       -0005 * loop index
   29   24  000000011000 0000 0000 0000 1000 AA1    HEX       +0008 * smaller of two values to add 
   30   25  000000011001 0000 0000 0000 1101 BB1    HEX       +000D * larger of two values to add
   31   26  000000011010 1111 0000 0000 0000 TMP    DS        +0001 * temp storage
   32   27  000000011011 0000 0000 0010 1000 STO    HEX       +0028 * address in SSS at which to store
   33   28  000000011100 1100 1100 1100 1100        ORG       +0028 * set PC location for SSS at +0020 
   34   40  000000101000 1111 0000 0000 0000 SSS    DS        +0010
   35   56  000000111000 0000 0000 1111 0000        END   ...


SYMBOL TABLE
    SYM LOC FLAGS
SYM  AA1  24
SYM  BB1  25
SYM  IDX  23
SYM  ONE  22
SYM  SSS  40
SYM  STO  27
SYM  TMP  26
SYM  TOP   3



MACHINE CODE
1010000000010111
1000000000011011
0100000000011011
1010000000011001
0100000000011010
1010000000011001
1000000000011000
1110000000000011
0101000000011011
1011000000011011
0100000000011001
1010000000011010
0100000000011000
1010000000010111
1000000000010110
0100000000010111
1010000000011011
1000000000010110
0100000000011011
1010000000010111
0000000000000011
1110000000000010
0000000000000001
1111111111111011
0000000000001000
0000000000001101
1111000000000000
0000000000101000
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1111000000000000
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100
1100110011001100

Main: Ending execution

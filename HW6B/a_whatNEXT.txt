file is simply here to record what our next goal(s) is currently for 6B.

  - Start working on catching errors!!
  - We need someone documenting the code and running mycpplint on the code.


INTERPRETER:
-	PC can’t be larger than 4095
-	RD statement must read a LEGAL hex operand
-	RD statement cant read past end of file
-	The instruction pointed to by pc must be valid opcode 
-	Trying to execute data that’s start with bits other than 111 should fail
ASSEMBLER AND INTERPRETER:
-	Addresses must be less than 4096 decimal
-	One cannot ORG below 0 or past 4096.
-	One cannot DS below 0 or past 4096.
ASSEMBLER:
-	Symbol Checking. Three characters, begin with alpha character, no blank in middle
-	Opcode mnemonics must be legal
-	Symbols in columns 1-3 refer to memory location. Cant have IsMultiply flag (only one definition)
-	Symbols used as symbolic operands must be defined
-	All programs NEED an END statement
-	Hex operands must be 5 characters in length, starting with +/- then 4 legal hex characters 0-F.

SYMBOLS: 
-	Check for valid symbols within symbol.cc when doing first pass
o	PROPER: Symbols are three characters with possibly one or two blanks at the end.
o	If not: use HasAnError and GetErrorMessages to flag this. CheckInvalid if invalid.
o	SetMultiply if defined multiple times. 
-	We currently check:
o	If symbol IS NOT three blanks, make it a symbol and pass to symboltable_ in pulletassembler.cc during pass one
MNEMONICS:
-	Ff	
o	PROPER: Mnemonics are three characters with possibly one blank at end.
COMMENT LINES:
-	We currently check:
o	Flag during pass one if line starts with *, will only do pass two if it’s not flagged
